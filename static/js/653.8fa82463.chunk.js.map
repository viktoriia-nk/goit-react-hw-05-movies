{"version":3,"file":"static/js/653.8fa82463.chunk.js","mappings":"4TAEMA,EAAU,mCAGHC,EAAW,mCAAG,6GAEAC,IAAAA,IAAA,kEAAqEF,IAFrE,cAEjBG,EAFiB,yBAIhBA,EAASC,MAJO,gCAOvBC,MAAM,EAAD,IAPkB,yDAAH,qDAYXC,EAAU,mCAAG,WAAOC,GAAP,gGAECL,IAAAA,IAAA,6CAAgDK,EAAhD,oBAAmEP,EAAnE,oBAFD,cAEhBG,EAFgB,yBAGfA,EAASC,MAHM,gCAMtBC,MAAK,MANiB,yDAAH,sDAWVG,EAAa,mCAAG,WAAOD,GAAP,gGAEFL,IAAAA,IAAA,6CAAgDK,EAAhD,4BAA2EP,EAA3E,oBAFE,cAEnBG,EAFmB,yBAIlBA,EAASC,MAJS,gCAOzBC,MAAK,MAPoB,yDAAH,sDAWbI,EAAU,mCAAG,WAAOF,GAAP,gGAECL,IAAAA,IAAA,6CAAgDK,EAAhD,4BAA2EP,EAA3E,oBAFD,cAEhBG,EAFgB,yBAIfA,EAASC,MAJM,gCAOtBC,MAAK,MAPiB,yDAAH,sDAWVK,EAAU,mCAAG,WAAOC,GAAP,uFACAT,IAAAA,IAAA,4DAA+DF,EAA/D,kBAAgFW,IADhF,cAClBR,EADkB,yBAEjBA,EAASC,MAFQ,2CAAH,qD,gHCjDvB,EAAuB,qBAAvB,EAAoD,sBAApD,EAAiF,qBAAjF,EAA2G,mBAA3G,EAAwI,wB,SCiExI,EA5De,WAEX,OAAkBQ,EAAAA,EAAAA,UAAS,IAA3B,eAAOC,EAAP,KAAUC,EAAV,KACA,GAA4BF,EAAAA,EAAAA,UAAS,IAArC,eAAOG,EAAP,KAAeC,EAAf,KA2BA,OAXAC,EAAAA,EAAAA,YAAU,WACC,KAAJJ,IAGHH,EAAAA,EAAAA,IAAWG,GACVK,MAAK,SAAAf,GAAQ,OAAEa,EAAUb,EAASgB,QAArB,IACbC,OAAM,SAAAC,GAAG,OAAIC,QAAQC,IAAIF,EAAhB,GACb,GAAC,CAACR,KAKA,iCACC,iBAAMW,SAtBW,SAACC,GAClBA,EAAEC,iBACe,KAAbb,EAAEc,QACFtB,MAAM,0IAGVS,EAAK,GACR,EAeiCc,UAAWC,EAAzC,UACI,kBACIC,KAAK,OACLC,aAAa,MACbC,WAAS,EACTC,YAAY,mBACZC,KAAK,IACLC,MAAOtB,EACPuB,SAnCc,SAACX,GACvBX,EAAKW,EAAEY,cAAcF,MAAMG,cAC9B,EAkCWV,UAAWC,MAGZ,KAANhB,IACD,eAAIe,UAAWC,EAAf,SACCd,EAAOwB,KAAI,SAAAC,GAAK,OACb,eACgBZ,UAAWC,EAD3B,UAEI,SAAC,KAAD,CAAMD,UAAWC,EAAQY,GAAE,kBAAaD,EAAME,IAA9C,UAAoD,wBAAKF,EAAMG,WAD7DH,EAAME,GAFC,QAYxB,C","sources":["apiService.js","webpack://goit-react-hw-05-movies/./src/components/Movies/Movies.module.css?9f30","components/Movies/Movies.jsx"],"sourcesContent":["import axios from 'axios';\n\nconst API_KEY = '53540339dd7e56b42abfb648d96f315b'\n\n\nexport const getTrending = async () => {\n  try{\n    const response = await axios.get(`https://api.themoviedb.org/3/trending/movie/day?api_key=${API_KEY}`)\n\n    return response.data;\n  }\n  catch (error) {\n    alert(error)\n  }\n};\n\n\nexport const getOneFilm = async (movieId) => {\n  try{\n    const response = await axios.get(`https://api.themoviedb.org/3/movie/${movieId}?api_key=${API_KEY}&language=en-US`);\n    return response.data;\n  } \n  catch (error) {\n    alert (error)\n  }\n}\n\n\nexport const getCastActors = async (movieId) => {\n  try{\n    const response = await axios.get(`https://api.themoviedb.org/3/movie/${movieId}/credits?api_key=${API_KEY}&language=en-US`);\n    // console.log(response.data);\n    return response.data\n  }\n  catch (error) {\n    alert (error)\n  }\n}\n\nexport const getReviews = async (movieId) => {\n  try{\n    const response = await axios.get(`https://api.themoviedb.org/3/movie/${movieId}/reviews?api_key=${API_KEY}&language=en-US`);\n    // console.log(response.data);\n    return response.data\n  }\n  catch (error) {\n    alert (error)\n  }\n}\n\nexport const searchFilm = async (query) => {\n  const response =  await axios.get(`https://api.themoviedb.org/3/search/movie?api_key=${API_KEY}&query=${query}`)\n  return response.data\n}\n\n\nexport  const getGenres = async () => {\n  const response = await axios.get(\n    `https://api.themoviedb.org/3/genre/movie/list?api_key=${API_KEY}&language=en-US`\n  );\n\n  return response.data.genres;\n}\n\n\n\n","// extracted by mini-css-extract-plugin\nexport default {\"form\":\"Movies_form__mp42q\",\"input\":\"Movies_input__OE3ef\",\"link\":\"Movies_link__0oDWE\",\"li\":\"Movies_li__oWqWQ\",\"gallery\":\"Movies_gallery__cFa2E\"};","import { useEffect } from 'react';\nimport {useState} from 'react';\nimport {Link} from 'react-router-dom';\nimport {searchFilm} from '../../apiService';\nimport s from './Movies.module.css';\n\nconst Movies = () => {\n\n    const [q, setQ] = useState('')\n    const [movies, setMovies] = useState([])\n\n    const handleQueryChange = (e) =>{\n        setQ(e.currentTarget.value.toLowerCase())\n    }\n\n\n    const handleSubmit = (e) => {\n        e.preventDefault()\n        if (q.trim() === \"\"){\n            alert(\"Введите поисковой запрос\")\n        }\n        \n        setQ('')\n    }\n\n    useEffect(()=> {\n        if(q===''){\n            return\n        }\n        searchFilm(q)\n        .then(response=>setMovies(response.results))\n        .catch(err => console.log(err));\n    },[q])\n\n// console.log(movies);\n\n    return (\n       <>\n        <form onSubmit={handleSubmit} className={s.form}>\n            <input\n                type=\"text\"\n                autoComplete=\"off\"\n                autoFocus\n                placeholder=\"Search movies...\"\n                name=\"q\"\n                value={q} \n                onChange = {handleQueryChange}\n                className={s.input}\n                />\n        </form>\n        {q !== \"\" && \n        <ul className={s.gallery}>\n        {movies.map(movie=>(\n            <li\n            key ={movie.id} className={s.li}>\n                <Link className={s.link} to={`/movies/${movie.id}`}><h2>{movie.title}</h2></Link>\n            </li>\n        ))}\n            \n    </ul>}\n        </>\n\n        \n    )\n}\n\nexport default Movies"],"names":["API_KEY","getTrending","axios","response","data","alert","getOneFilm","movieId","getCastActors","getReviews","searchFilm","query","useState","q","setQ","movies","setMovies","useEffect","then","results","catch","err","console","log","onSubmit","e","preventDefault","trim","className","s","type","autoComplete","autoFocus","placeholder","name","value","onChange","currentTarget","toLowerCase","map","movie","to","id","title"],"sourceRoot":""}