{"version":3,"file":"static/js/326.e77c387f.chunk.js","mappings":"wOACA,EAA4B,gCAA5B,EAAsE,8BAAtE,EAA4G,4BAA5G,EAA8I,0BAA9I,EAAmL,+BAAnL,EAA2N,6BAA3N,EAA+P,2BAA/P,EAAwS,kCAAxS,EAAmV,6BAAnV,EAAwX,4BAAxX,EAA0Z,0BAA1Z,EAA2b,2BAA3b,EAA8d,4BAA9d,EAAigB,2B,SC4DjgB,EAtDqB,WAAO,IAAD,EACvB,GAA4BA,EAAAA,EAAAA,UAAS,CAAC,GAAtC,eAAOC,EAAP,KAAeC,EAAf,KAEMC,GAAWC,EAAAA,EAAAA,MAGVC,GAAWC,EAAAA,EAAAA,MAAXD,QAWP,OARAE,EAAAA,EAAAA,YAAU,YACNC,EAAAA,EAAAA,IAAWH,GACVI,MAAK,SAAAC,GAAQ,OAAIR,EAAUQ,EAAd,IACbC,OAAM,SAAAC,GAAG,OAAIC,QAAQC,IAAIF,EAAhB,GACb,GAAE,CAACP,KAKD,iCACC,SAAC,KAAD,CAAMU,GAAE,UAAEZ,EAASa,aAAX,QAAoB,IAAKC,UAAWC,EAA5C,sBAGA,iBAAKD,UAAWC,EAAhB,WACA,gBAAKD,UAAWC,EAAOC,IAAG,yCAAoClB,EAAOmB,aAAeC,IAAKpB,EAAOqB,SACjG,iBAAKL,UAAWC,EAAhB,WACA,eAAID,UAAWC,EAAf,SAAyBjB,EAAOqB,SAC/B,cAAGL,UAAWC,EAAd,SAA2BjB,EAAOsB,YAClC,eAAGN,UAAWC,EAAd,4BAAsC,iBAAMD,UAAWC,EAAjB,SAA0BjB,EAAOuB,mBACvE,iBAAKP,UAAWC,EAAhB,WACA,cAAGD,UAAWC,EAAd,sBACA,eAAID,UAAWC,EAAf,SACKjB,EAAOwB,QAAUxB,EAAOwB,OAAOC,KAAI,SAAAC,GAAK,OACrC,gBAAmBV,UAAWC,EAA9B,cAAyCS,EAAMC,OAAtCD,EAAME,GADsB,gBAS9C,iBAAKZ,UAAWC,EAAhB,WACC,SAAC,KAAD,CAASD,UAAWC,EAAQH,GAAG,OAA/B,mBACA,SAAC,KAAD,CAASE,UAAWC,EAAQH,GAAG,UAA/B,yBAGA,SAAC,EAAAe,SAAD,WACE,SAAC,KAAD,QAMT,C,4MCzDKC,EAAU,mCAGHC,EAAW,mCAAG,6GAEAC,IAAAA,IAAA,kEAAqEF,IAFrE,cAEjBrB,EAFiB,yBAIhBA,EAASwB,MAJO,gCAOvBC,MAAM,EAAD,IAPkB,yDAAH,qDAYX3B,EAAU,mCAAG,WAAOH,GAAP,gGAEC4B,IAAAA,IAAA,6CAAgD5B,EAAhD,oBAAmE0B,EAAnE,oBAFD,cAEhBrB,EAFgB,yBAGfA,EAASwB,MAHM,gCAMtBC,MAAK,MANiB,yDAAH,sDAWVC,EAAa,mCAAG,WAAO/B,GAAP,gGAEF4B,IAAAA,IAAA,6CAAgD5B,EAAhD,4BAA2E0B,EAA3E,oBAFE,cAEnBrB,EAFmB,yBAIlBA,EAASwB,MAJS,gCAOzBC,MAAK,MAPoB,yDAAH,sDAWbE,EAAU,mCAAG,WAAOhC,GAAP,gGAEC4B,IAAAA,IAAA,6CAAgD5B,EAAhD,4BAA2E0B,EAA3E,oBAFD,cAEhBrB,EAFgB,yBAIfA,EAASwB,MAJM,gCAOtBC,MAAK,MAPiB,yDAAH,sDAWVG,EAAU,mCAAG,WAAOC,GAAP,uFACAN,IAAAA,IAAA,4DAA+DF,EAA/D,kBAAgFQ,IADhF,cAClB7B,EADkB,yBAEjBA,EAASwB,MAFQ,2CAAH,qD","sources":["webpack://goit-react-hw-05-movies/./src/Pages/MovieDetails/MovieDetails.module.css?f582","Pages/MovieDetails/MovieDetails.jsx","apiService.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"container\":\"MovieDetails_container__6fEfu\",\"wrapper\":\"MovieDetails_wrapper__eugUr\",\"title\":\"MovieDetails_title__TKHUc\",\"img\":\"MovieDetails_img__FKTmh\",\"overview\":\"MovieDetails_overview__Evkrn\",\"relise\":\"MovieDetails_relise__E7Ad+\",\"span\":\"MovieDetails_span__Lga2f\",\"genresTitle\":\"MovieDetails_genresTitle__ghUXz\",\"genres\":\"MovieDetails_genres__2-7A1\",\"genre\":\"MovieDetails_genre__RylVi\",\"nav\":\"MovieDetails_nav__u1IBS\",\"link\":\"MovieDetails_link__coFQG\",\"thumb\":\"MovieDetails_thumb__JpffB\",\"back\":\"MovieDetails_back__q9JBC\"};","import { Suspense, useEffect, useState } from 'react';\nimport {useParams, NavLink, Outlet, useLocation, Link} from 'react-router-dom';\nimport {getOneFilm} from '../../apiService';\nimport s from './MovieDetails.module.css';\n\n\n\nconst MovieDetails = () => {\n    const [movies, setMovies] = useState({})\n\n    const location = useLocation();\n    \n\n    const {movieId} = useParams()\n\n\n    useEffect(()=>{\n        getOneFilm(movieId)\n        .then(response => setMovies(response))\n        .catch(err => console.log(err));\n    }, [movieId])\n\n   \n       \n    return (\n       <>\n        <Link to={location.state ?? '/'} className={s.back}>\n            Go back\n          </Link>\n        <div className={s.container}>\n        <img className={s.img} src={`https://image.tmdb.org/t/p/w500${movies.poster_path}`} alt={movies.title} />\n       <div className={s.wrapper}>\n       <h2 className={s.title}>{movies.title}</h2>\n        <p className={s.overview}>{movies.overview}</p>\n        <p className={s.relise}>Realise Date: <span className={s.span}>{movies.release_date}</span></p>\n        <div className={s.thumb}>\n        <p className={s.genresTitle}>Genres:</p>   \n        <ul className={s.genres}>\n            {movies.genres && movies.genres.map(genre => (\n                <li key={genre.id} className={s.genre}> {genre.name}</li>\n                    ))}\n        </ul>\n        </div>\n        \n        \n       </div>\n       </div>\n       <div className={s.nav}>\n        <NavLink className={s.link} to=\"cast\" >Cast</NavLink>\n        <NavLink className={s.link} to=\"reviews\" >Reviews</NavLink>\n        \n        </div>\n        <Suspense>\n          <Outlet />\n        </Suspense>\n        \n        \n        </>\n    )\n}\n\nexport default MovieDetails","import axios from 'axios';\n\nconst API_KEY = '53540339dd7e56b42abfb648d96f315b'\n\n\nexport const getTrending = async () => {\n  try{\n    const response = await axios.get(`https://api.themoviedb.org/3/trending/movie/day?api_key=${API_KEY}`)\n\n    return response.data;\n  }\n  catch (error) {\n    alert(error)\n  }\n};\n\n\nexport const getOneFilm = async (movieId) => {\n  try{\n    const response = await axios.get(`https://api.themoviedb.org/3/movie/${movieId}?api_key=${API_KEY}&language=en-US`);\n    return response.data;\n  } \n  catch (error) {\n    alert (error)\n  }\n}\n\n\nexport const getCastActors = async (movieId) => {\n  try{\n    const response = await axios.get(`https://api.themoviedb.org/3/movie/${movieId}/credits?api_key=${API_KEY}&language=en-US`);\n    // console.log(response.data);\n    return response.data\n  }\n  catch (error) {\n    alert (error)\n  }\n}\n\nexport const getReviews = async (movieId) => {\n  try{\n    const response = await axios.get(`https://api.themoviedb.org/3/movie/${movieId}/reviews?api_key=${API_KEY}&language=en-US`);\n    // console.log(response.data);\n    return response.data\n  }\n  catch (error) {\n    alert (error)\n  }\n}\n\nexport const searchFilm = async (query) => {\n  const response =  await axios.get(`https://api.themoviedb.org/3/search/movie?api_key=${API_KEY}&query=${query}`)\n  return response.data\n}\n\n\nexport  const getGenres = async () => {\n  const response = await axios.get(\n    `https://api.themoviedb.org/3/genre/movie/list?api_key=${API_KEY}&language=en-US`\n  );\n\n  return response.data.genres;\n}\n\n\n\n"],"names":["useState","movies","setMovies","location","useLocation","movieId","useParams","useEffect","getOneFilm","then","response","catch","err","console","log","to","state","className","s","src","poster_path","alt","title","overview","release_date","genres","map","genre","name","id","Suspense","API_KEY","getTrending","axios","data","alert","getCastActors","getReviews","searchFilm","query"],"sourceRoot":""}